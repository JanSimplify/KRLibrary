name: Codecov

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  codecov:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            build_type: Debug
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            build_type: Debug

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '2'

      - name: Install gcovr
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: pip install gcovr

      - name: Install OpenCppCoverage
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: |
          choco install OpenCppCoverage -y
          echo "C:\Program Files\OpenCppCoverage" >> $env:GITHUB_PATH

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "source-dir=${{ github.workspace }}" >> "${GITHUB_OUTPUT}"
          echo "build-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
            cmake
            -S ${{ steps.strings.outputs.source-dir }}
            -B ${{ steps.strings.outputs.build-dir }}
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
            -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
            -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
            -DKRLibrary_ENABLE_CODE_COVERAGE=ON

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-dir }} --config ${{ matrix.build_type }}

      - name: Test
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        working-directory: ${{ steps.strings.outputs.build-dir }}
        run: ctest --build-config ${{ matrix.build_type }}

      - name: Call gcovr
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: gcovr --xml codecov.xml

      - name: Call OpenCppCoverage
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: >
          OpenCppCoverage.exe
          --config_file OpenCppCoverage.conf
          --export_type cobertura:codecov.xml
          -- ctest --build-config ${{ matrix.build_type }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          name: ${{ matrix.os }}
          files: codecov.xml
          disable_search: true
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
